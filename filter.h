/*
 * filter.h
 *
 * Created: 09.11.2013 8:37:30
 *  Author: Администратор
 */ 

#ifndef FILTER_H_
#define FILTER_H_
//***************************************************************************************
#define DELTA	200UL
//***************************************************************************************
unsigned int samples_0[16] = {0};
unsigned int samples_1[16] = {0};
unsigned int samples_2[16] = {0};
unsigned int samples_3[16] = {0};
unsigned int samples_4[16] = {0};
//***************************************************************************************
unsigned char filter(unsigned long int *del_0,unsigned long int *del_1,unsigned long int *del_2,unsigned long int *del_3,unsigned long int *del_4) 
{
	signed char cnt = 0,err = 0;
	unsigned long int sum_0 = 0,sum_1 = 0,sum_2 = 0,sum_3 = 0,sum_4 = 0;
	//=================================================================
	for (cnt = 0; cnt <= 15; cnt++)
	{
		sum_0 = sum_0 + samples_0[cnt];
		sum_1 = sum_1 + samples_1[cnt];
		sum_2 = sum_2 + samples_2[cnt];
		sum_3 = sum_3 + samples_3[cnt];
		sum_4 = sum_4 + samples_4[cnt];
	};
	//=================================================================
	sum_0 = sum_0 >> 4;
	if ((*del_0>(sum_0+DELTA))|(*del_0<(sum_0-DELTA)))
	{
		err = 1;
	}
	else
	{
		//=================================================================
		for (cnt = 1; cnt <= 15; cnt++)
		{
			samples_0[cnt - 1] = samples_0[cnt];
		};
		//=================================================================
		samples_0[15] = *del_0;
		//=================================================================
	};
	//=================================================================
	sum_1 = sum_1 >> 4;
	if ((*del_1>(sum_1+DELTA))|(*del_1<(sum_1-DELTA)))
	{
		err = 1;
	}
	else
	{
		//=================================================================
		for (cnt = 1; cnt <= 15; cnt++)
		{
			samples_1[cnt - 1] = samples_1[cnt];
		};
		//=================================================================
		samples_1[15] = *del_1;
		//=================================================================
	};
	//=================================================================
	sum_2 = sum_2 >> 4;
	if ((*del_2>(sum_2+DELTA))|(*del_2<(sum_2-DELTA)))
	{
		err = 1;
	}
	else
	{
		//=================================================================
		for (cnt = 1; cnt <= 15; cnt++)
		{
			samples_2[cnt - 1] = samples_2[cnt];
		};
		//=================================================================
		samples_2[15] = *del_2;
		//=================================================================
	};
	//=================================================================
	sum_3 = sum_3 >> 4;
	if ((*del_3>(sum_3+DELTA))|(*del_3<(sum_3-DELTA)))
	{
		err = 1;
	}
	else
	{
		//=================================================================
		for (cnt = 1; cnt <= 15; cnt++)
		{
			samples_3[cnt - 1] = samples_3[cnt];
		};
		//=================================================================
		samples_3[15] = *del_3;
		//=================================================================
	};
	//=================================================================
	sum_4 = sum_4 >> 4;
	if ((*del_4>(sum_4+DELTA))|(*del_4<(sum_4-DELTA)))
	{
		err = 1;
	}
	else
	{
		//=================================================================
		for (cnt = 1; cnt <= 15; cnt++)
		{
			samples_4[cnt - 1] = samples_4[cnt];
		};
		//=================================================================
		samples_4[15] = *del_4;
		//=================================================================
	};
	//=================================================================
	for (cnt = 0; cnt <= 15; cnt++)
	{
		sum_0 = sum_0 + samples_0[cnt];
		sum_1 = sum_1 + samples_1[cnt];
		sum_2 = sum_2 + samples_2[cnt];
		sum_3 = sum_3 + samples_3[cnt];
		sum_4 = sum_4 + samples_4[cnt];
	};
	//=================================================================
	*del_0 = sum_0 >> 2;
	*del_1 = sum_1 >> 2;
	*del_2 = sum_2 >> 2;
	*del_3 = sum_3 >> 2;
	*del_4 = sum_4 >> 2;
	return err;
};
//***************************************************************************************
#endif /* FILTER_H_ */